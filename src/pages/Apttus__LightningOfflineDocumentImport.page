<!-- 
Apttus Contract Management
LightningOfflineDocumentImport

@2017-2019 Apttus Inc. All rights reserved.

Summary
-------
The offline document import page may be used to import and attach third party documents to the agreement 

parameters
==========
Name			| Required | Description
================|==========|======================================================================================
id 				| Yes      | The record id of the agreement
|		   |
finishPage		| No	   | The name of the finish page to navigate to after the import process is completed.
|		   | Parameters for the finish page may be passed by prefixing the parameter name with 'finish_'.
|		   | for e.g. if you pass in a parameter finish_id, the finish page will be called 
|		   | with the parameter id. A record id may be passed as the value for the finish page.
|		   | 
isCustomImport	| No       | The custom import indicator.
|		   | Indicates whether this is a custom import operation. 
|		   | For this parameter to take effect,the finishPage parameter must be provided.
|          |
===================================================================================================================
-->
<apex:page standardController="Apttus__APTS_Agreement__c" 
           extensions="Apttus.OfflineDocumentImportController">
    <head>
	
		<script type="text/javascript" src="/soap/ajax/30.0/connection.js"></script>
        <script type="text/javascript" src="/soap/ajax/30.0/apex.js"></script>
        <apex:include pageName="Apttus__ComplyJSLibInclude" />
		
        <apex:stylesheet value="{!URLFOR($Resource.Apttus__SLDS080, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
        <style>
            html body.sfdcBody {
				padding: 0px 0px 0 0px;
            }
			
			.imgSizeCls{
                height: 25px !important;
                max-height: 50px !important;
            }
        </style>
    </head>
    <body>
        
        <apex:form id="attachForm">
            <!-- hidden field(s) to be included by sf default query -->
            <apex:outputText value="{!Apttus__APTS_Agreement__c.name}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Version_Number__c}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Status__c}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Status_Category__c}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__FF_Agreement_Number__c}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Contract_Start_Date__c}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Contract_End_Date__c}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Agreement_Number__c}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Agreement_Category__c}" rendered="false" />
            <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__VersionAware__c}" rendered="false" />
            <div class="slds">
                <div class="slds-page-header" role="banner">
                    <div class="slds-grid">
                        <div class="slds-col slds-has-flexi-truncate">
                            <div>
                                <div>
                                    
                                </div>
                                <h2 class="slds-text-heading--medium slds-truncate slds-align-middle">
                                    Import Offline Agreement
                                </h2>    
                                
                            </div>
                            <div>
                                <h3 class="slds-text-heading--small slds-m-right--small slds-truncate slds-align-middle">
                                    {!Apttus__APTS_Agreement__c.Name}
                                </h3>    
                            </div>
                            <div class="visibleeror"> 
                                <h2 class="error">
                                    <apex:pageMessages />   
                                </h2>    
                            </div> 
                            
                        </div>
                    </div>
                </div>
                <div class="slds-page-header" role="banner" >
                    <div class="slds-grid slds-grid_pull-padded">
                        <apex:outputPanel id="addAttachments" rendered="{!(NOT(isInitialized) || canEditAgreement) && 
                                                                        NOT(HasErrors) && 
                                                                        NOT(ActionPollerEnabled) && 
                                                                        NOT(IsDone)}" > 
                            
                            <apex:outputPanel id="upload">
                                <div class="slds-box">
                                    <apex:outputText style="font-weight: bold" value="1. {!$Label.apttus__selectimportfile}" /><br/>
                                    <apex:outputText value="{!$Label.apttus__selectfiletoimportinstruction}" /> <p/>
                                    <apex:inputFile size="80" value="{!filebody}" fileName="{!fileName}" contentType="{!contentType}" /><p/>
                                    <apex:outputText value="{!uploadErrorMsg}" style="font-weight: bold; color: red" /><p/>
                                </div>
                                <div class="slds-box">
                                    <apex:outputText style="font-weight: bold" value="2. {!$Label.apttus__clickattachfile}" escape="true" /> <br/>
                                    <apex:outputText value="{!$Label.apttus__attachimportfileinstruction}" /> <p/>
                                    <apex:commandButton value="{!$Label.apttus__attachfile}" action="{!doAttach}" /> <p/>
                                </div>
                            </apex:outputPanel>
							
							<!-- Display Intelligent Import Option if Applicable -->
							<div class="slds-box">
								<apex:outputPanel rendered="{!isIntelligentImportSupported}" id="IntelligentImport">
									<apex:outputText style="font-weight: bold" value="{!'3.' & $Label.apttus__intelligentimportinstruction}" escape="true" /> <br/>
									<apex:outputText value="{!$Label.apttus__intelligentimport}"> </apex:outputText>
                                    <apex:inputCheckbox style="vertical-align: middle;  margin: .25em;" value="{!intelligentImport}" onchange="doChangeIntelligentImport()" onclick="onChangeImportOffline()"/> <p/>
								</apex:outputPanel>
							</div>
			
                            <div class="slds-box">
                                <apex:outputPanel >
                                    <p>{!$Label.apttus__filesuploaded}</p>
                                    <apex:dataList type="square" value="{!attachments}" var="item" rows="6" >
                                        <apex:outputText value="{!item.Name}"/>
                                    </apex:dataList>
                                </apex:outputPanel> 
                            </div>
							<!-- Display Intelligent Import Note  -->
                            <div class="slds-box">
                            <apex:outputPanel rendered="{!isIntelligentImportSupported}" id="intelligentImportNote">
                                <br/>
                                <apex:outputText value="{!$Label.apttus__intelligentimportnote}" />
                                <br/>
                            </apex:outputPanel>
                            </div>							
							<!-- Display Logo with powered by -->
							<div class="slds-box">
								<apex:outputPanel rendered="{!isIntelligentImportSupported && intelligentImportLogo != null}" id="intelligentImportLogo">
									<br/>
									<apex:outputText value="{!$Label.apttus__poweredbyide}" />
									<img id="theImage" class="imgSizeCls" src="{!intelligentImportLogo}" height="25" maxheight="50" alt="Logo of IDE Provider"/>
									<br/>
								</apex:outputPanel>
							</div>
                        </apex:outputPanel>  
                        
                        <apex:outputPanel id="importAttachments" rendered="{!(NOT(isInitialized) || canEditAgreement) && 
                                                                            NOT(HasErrors) && 
                                                                            (ActionPollerEnabled || IsDone)}"> 
                            <apex:outputPanel id="importerrors" rendered="{!HasErrors}">
                                <div class="slds-box"> <apex:pageMessages /> </div>
                            </apex:outputPanel>
                            <div class="slds-box">
                                <apex:outputPanel id="import" rendered="{!NOT(IsDone)}">
                                    <apex:outputText style="font-weight: bold" value="{!$Label.apttus__importdocumentinstruction}" /><br/>
                                    <p/>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IsDone}">
                                    <p>{!$Label.apttus__documentsimported}</p>
                                    <apex:dataList type="square" value="{!attachments}" var="item" rows="6" >
                                        <apex:outputText value="{!item.Name}"/>
                                    </apex:dataList>
                                </apex:outputPanel> 
                                <apex:actionPoller enabled="{!ActionPollerEnabled}" 
                                                   interval="5" 
                                                   action="{!doImport}" 
                                                   reRender="importAttachments,buttonPannel" 
                                                   status="idStatus" 
                                                   rendered="{!NOT(HasFinishPage)}" oncomplete="invokeIntelligentImport()" />
                                
                                <apex:actionPoller enabled="{!ActionPollerEnabled}" 
                                                   interval="5" 
                                                   action="{!doImport}" 
                                                   status="idStatus" 
                                                   rendered="{!HasFinishPage}" oncomplete="invokeIntelligentImport()"/>
                                
                                <apex:actionStatus id="idStatus" startText="{!$Label.apttus__importingdocuments}"></apex:actionStatus>
                            </div>
                        </apex:outputPanel>  
                        
                    </div>
                </div>
                <!-- Button Pannel-->
                <div class="slds-page-header" role="banner">
                    <div class="slds-grid">  
                        <div class="slds-col"></div>
                        <div class="slds-grid slds-grid_align-end">
							<apex:outputPanel id="buttonPannel"> 
	                            <div class="slds-grid slds-grid_align-end">
	                                <apex:commandButton styleclass="slds-button slds-button--neutral"  
	                                                    value="{!$Label.apttus__cancel}"  action="{!doCancel}"
	                                                    rendered="{!Not(ActionPollerEnabled || IsDone)}"/>
	                                &nbsp;
	                                <apex:commandButton styleclass="slds-button slds-button--neutral"  
	                                                    value="{!$Label.apttus__return}"  
	                                                    action="{!doReturn}"
	                                                    disabled="{!actionPollerEnabled}"
	                                                    rendered="{!(NOT(isInitialized) || canEditAgreement) && 
	                                                             NOT(HasErrors) && 
	                                                             (ActionPollerEnabled || IsDone)}"/>
	                                &nbsp;
                                    <apex:actionRegion >
                                        <apex:actionStatus id="continueStatus">
                                            <apex:facet name="stop">
                                                <apex:commandButton styleclass="slds-button slds-button--brand contBtn" action="{!doContinue}" value="{!$Label.apttus__continue}" 
                                                                    disabled="{!countOfAttachments <= 0}" rendered="{!Not(ActionPollerEnabled || IsDone)}" 
                                                                    status="continueStatus" rerender="attachForm"/>
                                            </apex:facet>
                                            <apex:facet name="start">
                                                <apex:outputPanel >
                                                    <apex:commandButton styleclass="slds-button slds-button--brand" value="{!$Label.apttus__continue}" status="continueStatus" disabled="true"/>
                                                </apex:outputPanel>
                                            </apex:facet>
                                        </apex:actionStatus>
                                    </apex:actionRegion>
	                                &nbsp;
	                            </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </div>
            </div>
			<apex:actionFunction name="doChangeIntelligentImport" action="{!doChangeIntelligentImport}" />
        </apex:form>
    </body>
	
	<script type="text/javascript">
    
        /**
         * Initializes the call
         */
        function initCall() {        
            try {
                sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
            } catch(e) {
                erroralert(cERROR_UNKNOWN,e);
                
            }        
        }
	    /**
    	 * Handle Disabling Continue Button 
     	*/
    	function onChangeImportOffline() {
            var continueButtons = document.getElementsByClassName("contBtn");
            continueButtons[0].disabled = true;
        }
    
        /**
         * Callback invoked after the created agreement is saved
         */
        function invokeIntelligentImport() {
            
            // get parameters            
            var agreementId = "{!JSENCODE(APTS_Agreement__c.Id)}";
            var intelligentImport = "{!intelligentImport}";
            var docId = "{!uploadedDocumentId}";
			
            try {
                
                // STEP I - initialize the call
                initCall();
				
                // STEP II - invoke call to IDE                
                if("true" == intelligentImport) {          
                    alert("{!$Label.IntelligentImportSuccess}");          
                    afterCreateIntelligentImport(agreementId, "{!$Label.IDEJob_SourceUseCase_ImportOffline}", null);
                }
				
            } catch(ex) {                
                // display the error
                erroralert(cERROR_UNKNOWN, ex);                
            }         
        }
    
    </script>
</apex:page>