<!-- 
    Apttus Contract Management
    AgreementDocumentEmail
     
    @2019 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus__APTS_Agreement__c" lightningStylesheets="true" recordSetVar="agreementLstRecords"
                                                extensions="Apttus.AgreementDocumentEmailController">
    
    <apex:includeScript value="{!URLFOR($Resource.Apttus__jszip, '/jszip.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus__JQuery112Library, 'jquery-1.12.3.js')}"/> 
    <apex:includeScript value="{!URLFOR($Resource.Apttus__AgreementDocumentEmailUI, 'js/jquery.blockUI.min.js')}"/> 
    <script type="text/javascript" src="/soap/ajax/42.0/connection.js"></script>
    <script type="text/javascript" src="/soap/ajax/42.0/apex.js"></script>      
    <apex:include pageName="Apttus__ComplyJSLibInclude" />
    
    <apex:stylesheet value="{!URLFOR($Resource.Apttus__AgreementDocumentEmailUI, 'css/agreementdocumentemail-uistyles.css')}"/>
    
    <!-- render the lightning css files in lightning mode. -->
    <apex:outputPanel rendered="{!OR($User.UIThemeDisplayed == 'Theme4d', $User.UIThemeDisplayed == 'Theme4t')}">
        <apex:slds />
        <apex:stylesheet value="{!URLFOR($Resource.Apttus__SLDS080, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />        
    </apex:outputPanel>    
    
    <script>
    
        var zipFile = new JSZip();
        var listAttWrapper;
        var j$ = jQuery.noConflict();
        
        /**
         * display loading icon on a pop up with message.
         */
        function onAjaxStart() { 
            j$.blockUI({ 
                message: '<img src="{!URLFOR($Resource.AgreementDocumentEmailUI, 'img/load-icon.gif')}"/><div>{!$Label.Apttus__AgreementDocumentEmailGeneratingMessage}</div>' 
            }); 
                
        }
        
        /**
         * hide loading icon and message. 
         */        
        function onAjaxStop() {
            j$.unblockUI();
        }
        
        /**
         * disable all checkboxes when user selects any file. 
         */
        function disableallCheckboxes() {
            var attachElements = document.getElementsByClassName("checkBoxes");  
        
            for(var i=0, elemLength = attachElements.length; i < elemLength; i++ ) {
                attachElements[i].disabled = true;
            }
        }
        
        /**
         * method is invoked after user selects the files and clicks on Email button.
         * creates a zipped file of all the selected files using JSZip Library.
         * calls the ComplyWebService class method to insert a record into ContentDistribution. 
         */
        function generateDownloadLinkForEmail(selectedIds) {
            try {
            
                //map used to manitain counter if same file name is repeated. 
                var occurrence = { };
                
                //set the sessionId.
                sforce.connection.sessionId = '{!$Api.Session_ID}';
                
                //call the complyMethod to fetch the body of all selected file ids.
                var listBlobDocumentContent = getFilesBodyByIds(selectedIds);
                                
                //iterate through each file and pass the body to JSZIP function to create a Zipped file.
                for (var i = 0; i < listBlobDocumentContent.length; i++) { 
                    var documentObj = listBlobDocumentContent[i];
                    
                    //JSZip does not add the file with same name to final Zipped file if there are multiple files with same name. 
                    //so, modifying the file name to append with  occurrence counter.  
                    var fileValue = documentObj.documentName;
                    var fileNameCounter = '';
                    var modifiedFileName = '';
                    var fileName = fileValue.substring(0, fileValue.lastIndexOf(".") );
                    var fileExtension = fileValue.substring(fileValue.lastIndexOf(".") + 1);
                    
                    //map for store occurrence of the each file name.                
                    if (occurrence[fileValue]) {
                        occurrence[fileValue]++;
                        fileNameCounter = ' (' + occurrence[fileValue] + ')';
                    }
                    else {
                        occurrence[fileValue] = 1;
                    } 
                    
                    //create unique fileName that can be passed to JSZip.
                    if(fileValue.lastIndexOf(".") > -1) {
                        modifiedFileName = fileName + fileNameCounter + '.' + fileExtension;
                    }
                    else{
                        modifiedFileName = fileValue + fileNameCounter ;
                    }
                
                    //JSZip function to compress the file body.
                    zipFile.file(modifiedFileName, documentObj.documentBody, {base64:true});
                }
                
                //after compress call the generate function ofJSZip to get the final zipped file.
                var blobZippedContent = zipFile.generate({type:"blob"});
                
                //invoke the createContentDocumentLink in ComplyJS which calls ComplyWebserive to insert the content and generate distribution link.
                createContentDocumentLink('{!JSENCODE(SUBSTITUTE($Label.Apttus__AgreementDocumentEmailDownloadedZipName, "0", TEXT(NOW()) + " GMT"))}',
                                                blobZippedContent, 
                                                '{!JSENCODE($Label.Apttus__AgreementDocumentEmailContentVersionReasonForChange)}') ;  
            } catch(ex) {
                
                // display the error
                erroralert(cERROR_UNKNOWN, ex);
                
            } 
        }
                  
        
        /**
         * callback function invoked from -  createContentDocumentLink in ComplyJS.  
         */
        var createContentDocumentLinkCallback = {
            onSuccess: function(result) {       
                //on successful generation of ContentDistribution Link, invoke the action function passing ContentDownloadUrl.
                navigateToEmailAuthorPage(result[0]);
                onAjaxStop();
            }, 
            onFailure: function(error) {
                alert('Error: ' + error);
                onAjaxStop();
            } 
        };
    </script>
     
    <!-- append div with class : slds-scope for lightning mode -->
    <div class="{!IF(OR($User.UIThemeDisplayed == 'Theme4d', $User.UIThemeDisplayed == 'Theme4t'), 'slds-scope' ,'' )}">
    
        <apex:form id="frmId">          
        
            <!-- actionFuntion -->
            <apex:actionFunction name="onFileSelect" action="{!copySelectedIds}" status="statusId" reRender="frmId">
                <apex:param value="" name="SelectedId" assignTo="{!SelectedId}"/>
                <apex:param value="" name="SelectedParentId" assignTo="{!SelectedParentId}"/>
                <apex:param value="" name="selectedType" assignTo="{!selectedType}"/>
                <apex:param value="" name="selectedValue" assignTo="{!selectedValue}"/>
            </apex:actionFunction>

            <apex:actionFunction name="expandCollapse" action="{!expandCollapse}" status="statusId" reRender="dataPanelId">
                <apex:param value="" name="SelectedParentId" assignTo="{!SelectedParentId}"/>
            </apex:actionFunction>

            <apex:actionFunction name="changePageSize" action="{!changePageSize}" status="statusId" reRender="dataPanelId">
                <apex:param value="" name="selectedPageSize" assignTo="{!selectedPageSize}"/>
            </apex:actionFunction>

            <apex:actionFunction name="navigateToEmailAuthorPage" action="{!navigateToEmailAuthorPage}" status="statusId" reRender="dataPanelId">
                <apex:param value="" name="downloadLink" assignTo="{!downloadLink}"/>
            </apex:actionFunction> <!-- actionFuntion section ends here -->
            
            <!-- header -->
            <apex:sectionHeader title="{!$Label.apttus__agreementdocumentemailsectionheadertitle}"/>
            
            <apex:pageBlock id="pgBlockId">
                <!--button panel, displays SendEmail button -->
                <apex:pageBlockButtons location="top" rendered="{!totalRecordsLength > 0}">
                    <apex:commandButton styleclass="slds-button slds-button--brand slds-m-top--medium action-button" 
                                        disabled="{!OR(totalSelectedFileSize == 0, totalSelectedFileSize > VALUE($Label.apttus__agreementdocumentemailmaxfilesizelimit))}" 
                                        onclick="onAjaxStart(); 
                                        setTimeout(function () { generateDownloadLinkForEmail(JSON.parse('{!JSENCODE(jsonSelectedDocumentIds)}')); }, 1000);"
                                        reRender="dummy" value="{!$Label.apttus__agreementdocumentemailemaildocumentsbuttonvalue}"/>
                </apex:pageBlockButtons>

                <!-- section to display the total selected file size counter -->
                <apex:outputPanel layout="block" styleclass="rightCls" rendered="{!totalRecordsLength > 0}">
                    <apex:outputLabel styleClass="txtCls" value="{!$Label.apttus__agreementdocumentemailselectedfilesizelabel} "/>
                    <apex:outputText styleClass="labelCls" value="{!totalSelectedFileSizeDisplayFormat}"/>
                </apex:outputPanel>
                
                <apex:outputPanel layout="block" styleclass="rightCls" rendered="{!totalRecordsLength > 0}">
                    <apex:outputLabel styleClass="txtCls" value="{!$Label.apttus__agreementdocumentemailmaxfilesizelimitmessage} "/>
                    <apex:outputText styleClass="labelCls" value="{!MaxFileSizeDisplayFormat}"/>
                </apex:outputPanel> 
                
                <apex:outputPanel id="dataPanelId" layout="block">
                    <apex:outputPanel rendered="{!totalRecordsLength > 0}">
                        <ul class="outerUlCls">
                            <apex:repeat value="{!agreementDocumentsPaginated}" var="agreement">
                                <li style="margin-left:0px;">
                                    <div class="agrmentCls"> 
                                        <!--collapsible icon, expand-->
                                        <apex:image styleClass="iconsCls" value="{!URLFOR($Resource.Apttus__AgreementDocumentEmailUI, 'img/arrow-right.png')}" rendered="{!agreement.boolHideRelatedDocumentRecords}" onclick="expandCollapse('{!agreement.agreementObj.Id}')"/>
                                        
                                        <!--collapsible icon, collapse-->
                                        <apex:image styleClass="iconsCls" value="{!URLFOR($Resource.Apttus__AgreementDocumentEmailUI, 'img/arrow-down.png')}" rendered="{!NOT(agreement.boolHideRelatedDocumentRecords)}" onclick="expandCollapse('{!agreement.agreementObj.Id}')"/>
                                        
                                        <!-- checkbox for user selection -->
                                        <apex:inputcheckbox styleClass="checkBoxes" value="{!agreement.boolAgreementSelected}" onclick="disableallCheckboxes();onFileSelect('{!agreement.agreementObj.Id}','{!agreement.agreementObj.Id}','Agreement', this.checked)"/>
                                        
                                        <!-- link to agreement records, opens in new tab -->
                                        <apex:outputLink styleClass="linkCls labelCls" value="/{!agreement.agreementObj.Id}" title="{!agreement.agreementObj.Name}" target="_blank">
                                            <apex:outputText value="{!agreement.agreementObj.Name}"/>
                                        </apex:outputLink>
                                    </div>
                                    <ul class="innerUlCls">
                                        <apex:repeat value="{!agreement.listDocumentsInfo}" var="relatedDocument" rendered="{!NOT(agreement.boolHideRelatedDocumentRecords)}">
                                            <li class="fileContainerCls">
                                                <div class="fileCls">
                                                    <span style="display:inline-block">
                                                        <apex:inputcheckbox styleClass="checkBoxes" value="{!relatedDocument.boolDocumentSelected}" onclick="disableallCheckboxes(); onFileSelect('{!relatedDocument.docId}','{!agreement.agreementObj.Id}','Document', this.checked)"/>
                                                    </span>
                                                    
                                                    <!-- filename -->
                                                    <span style="display:inline-block;width:80%;">
                                                        <apex:outputText styleClass="txtCls" value="{!relatedDocument.docName}"/>
                                                    </span>
                                                    
                                                    <!-- filesize -->
                                                    <span style="display:inline-block;width:15%;">
                                                        <apex:outputText styleClass="txtCls" value="{!relatedDocument.docSizeDisplayFormat}"/>
                                                    </span>
                                                </div>
                                            </li>
                                        </apex:repeat>
                                    </ul> 
                                </li>  
                            </apex:repeat>
                        </ul>
                    </apex:outputPanel>
                    <!-- panel to display message when no records found -->
                    <apex:outputPanel id="noRecordsPanel" rendered="{!totalRecordsLength == 0}">
                        <apex:outputText styleClass="txtCls" value="{!$Label.apttus__agreementdocumentemailnorecordsfound}"/>                        
                    </apex:outputPanel>
                    
                    <!-- panigation panel-->
                    <apex:outputPanel id="paginationPanelId" rendered="{!totalRecordsLength > 0}" layout="block">
                        <apex:outputPanel layout="inline">
                            <apex:outputText styleClass="labelCls" value="{!$Label.apttus__agreementdocumentemailpaginationrowsperpagelabel}"/>
                            <span class="linkCls {!IF(selectedPageSize == VALUE($Label.Apttus__AgreementDocumentEmailPaginationMinRowsPerPage), 'highlightSelected', '')}"
                                        onclick="changePageSize('{!$Label.apttus__agreementdocumentemailpaginationminrowsperpage}')">
                                <apex:outputText value="{!$Label.apttus__agreementdocumentemailpaginationminrowsperpage}"/>
                            </span> 
                            <span class="linkCls {!IF(selectedPageSize == VALUE($Label.Apttus__AgreementDocumentEmailPaginationIntermediateLimitRowsPerPage), 'highlightSelected', '')}"
                                        onclick="changePageSize('{!$Label.apttus__agreementdocumentemailpaginationintermediatelimitrowsperpage}')">
                                <apex:outputText value="{!$Label.apttus__agreementdocumentemailpaginationintermediatelimitrowsperpage}"/>
                            </span> 
                            <span class="linkCls {!IF(selectedPageSize == VALUE($Label.Apttus__AgreementDocumentEmailPaginationMaxRowsPerPage), 'highlightSelected', '')}"
                                        onclick="changePageSize('{!$Label.apttus__agreementdocumentemailpaginationmaxrowsperpage}')">
                                <apex:outputText value="{!$Label.apttus__agreementdocumentemailpaginationmaxrowsperpage}"/>
                            </span>
                        </apex:outputPanel>

                        <apex:outputPanel style="float:right">
                            <apex:commandLink value=" {!$Label.apttus__previouspagination} " styleClass="linkCls labelCls" action="{!previous}" rendered="{!hasPrevious}" reRender="frmId" /> 
                            <apex:outputText styleClass="disable labelCls" rendered="{!NOT(hasPrevious)}" value=" {!$Label.apttus__previouspagination} "/>
                            <apex:outputText value="|"/>
                            <apex:commandLink value=" {!$Label.apttus__nextpagination} " action="{!next}" styleClass="linkCls labelCls" rendered="{!hasNext}" reRender="frmId" />
                            <apex:outputText styleClass="disable labelCls" rendered="{!NOT(hasNext)}" value=" {!$Label.apttus__nextpagination} "/>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:outputPanel><!-- pagination panel ends here-->
                
            </apex:pageBlock>
        </apex:form>
    </div>
            
</apex:page>