/**
* 
* @Author Provider Intake Team
* @Description - Test Class for Manaul Case Creation for Case Mode Selection(Add\Change\Delete).
* @Date 10/17/2017
* */
@isTest
public class TestManualCaseCreationController {
    static testMethod void testPfinSelection()
    {
        DataUtility.insertTestData();
        Account testAccount=[Select Id From Account Where isPersonAccount=false Limit 1];
        Test.startTest();
       PageReference pageRef = Page.PFINSelection; 
        pageRef.getParameters().put('accountId', String.valueOf(testAccount.Id));            
        System.test.setCurrentPage(pageRef);        
        ManualCaseCreationController  pfinSelection= new ManualCaseCreationController();
        pfinSelection.pFINUrl();
        pfinSelection.requestUrl();
        pfinSelection.prevUrl();
        pfinSelection.fetchUrlAddress();
        pfinSelection.getAddressInfo();
        
        List<String> listOfBillPfins = ManualCaseCreationController.populatePFIN('Bil',testAccount.Id);    
        System.assert(listOfBillPfins.size()>0,true);
        pageRef.getParameters().put('setPFIN',listOfBillPfins[0]);
        pfinSelection.getPFINList();
        pfinSelection.billPfinSelection(); 
        pfinSelection.isBilling=true;
        pfinSelection.changeAddressType();        
        pfinSelection.selPfin = listOfBillPfins[0];
        List<String> listOfNonBillPfins = ManualCaseCreationController.populateNonBillPFIN('No',testAccount.Id,listOfBillPfins[0]); 
        System.assert(listOfNonBillPfins.size()>0,true);
        pageRef.getParameters().put('setPFIN',listOfNonBillPfins[0]);
        pfinSelection.fetchAddressNonBillPfin();
        System.assert(pfinSelection.wrapList.size()>0,true);
        pfinSelection.isServiceLocation=true;
        pfinSelection.isBilling=true;
        pfinSelection.changeAddressType();
        pfinSelection.DelPFIN='NonBillPfin';
        pfinSelection.addRow();
        //System.assert(pfinSelection.wrapList.size()>0,true);        
        //listOfNonBillPfins = ManualCaseCreationController.populateNonBillPFIN('Af',testAccount.Id,listOfBillPfins[0]); 
        //System.assert(listOfNonBillPfins.size()>0,true);
       pageRef.getParameters().put('setPFIN',listOfNonBillPfins[0]);
        pfinSelection.fetchAddressNonBillPfin();
        //System.assert(pfinSelection.wrapList.size()>0,true);        
        pfinSelection.isServiceLocation=true;
        pfinSelection.isBilling=true;
        pfinSelection.changeAddressType();
        pfinSelection.DelPFIN='NonBillPfin';
        pfinSelection.addRow();
        pfinSelection.DelPFIN='AffiliatedPfin';
        pfinSelection.addRow();
        pageRef.getParameters().put('setPFIN','NonBillPfin');
        pageRef.getParameters().put('selectAllCheckBox','true');
        pfinSelection.fetchAllAddress();
        pageRef.getParameters().put('selectAllCheckBox','false');
        pfinSelection.fetchAllAddress();        
        Test.stopTest();
    }
    
    static testMethod void coverManualCaseSelection()
    {
        DataUtility.insertTestData();
        Account testAccount=[Select Id From Account Where isPersonAccount=false Limit 1];
        Test.startTest();
        PageReference pageRef = Page.PFINSelection; 
        pageRef.getParameters().put('accountId', String.valueOf(testAccount.Id));            
        System.test.setCurrentPage(pageRef);        
        ManualCaseCreationController  pfinSelection= new ManualCaseCreationController();
        List<String> listOfBillPfins = ManualCaseCreationController.populatePFIN('Bil',testAccount.Id); 
        System.assert(listOfBillPfins.size()>0,true);
        pageRef.getParameters().put('setPFIN',listOfBillPfins[0]);
        pfinSelection.billPfinSelection(); 
        pfinSelection.isBilling=true;
        pfinSelection.changeAddressType();        
        pfinSelection.selPfin = listOfBillPfins[0];
        pfinSelection.selectChange();
        pfinSelection.npiChgFlg =true;       
         pfinSelection.nameChgFlg =true;
         pfinSelection.billChgFlg=true;
         pfinSelection.phyChgFlg=true;
         pfinSelection.crdChgFlg=true;
        pfinSelection.admChgFlg=true;
       pfinSelection.setEmailAccount(testAccount.Id, NULL);
        pfinSelection.fetchAddressDetails();        
        List<String> listOfNonBillPfins = ManualCaseCreationController.populateNonBillPFIN('No',testAccount.Id,listOfBillPfins[0]); 
        System.assert(listOfNonBillPfins.size()>0,true);
        pageRef.getParameters().put('setPFIN',listOfNonBillPfins[0]);
        pfinSelection.fetchAddressNonBillPfin();
        System.assert(pfinSelection.wrapList.size()>0,true);
        pfinSelection.isServiceLocation=true;
        pfinSelection.isBilling=true;
        pfinSelection.changeAddressType();
        pfinSelection.DelPFIN='NonBillPfin';
        pfinSelection.addRow();
        pfinSelection.selectChange();
        pfinSelection.npiChgFlg =true;       
         pfinSelection.nameChgFlg =true;
         pfinSelection.billChgFlg=true;
         pfinSelection.phyChgFlg=true;
         pfinSelection.crdChgFlg=true;
        pfinSelection.admChgFlg=true;
        pfinSelection.setEmailAccount(testAccount.Id, NULL);
        pfinSelection.fetchAddressDetails();         
        //System.assert(pfinSelection.wrapList.size()>0,true);     
           
        //listOfNonBillPfins = ManualCaseCreationController.populateNonBillPFIN('Af',testAccount.Id,listOfBillPfins[0]); 
        //System.assert(listOfNonBillPfins.size()>0,true);
        pageRef.getParameters().put('setPFIN',listOfNonBillPfins[0]);
        pfinSelection.fetchAddressNonBillPfin();
        //System.assert(pfinSelection.wrapList.size()>0,true);        
        pfinSelection.isServiceLocation=true;
        pfinSelection.isBilling=true;
        pfinSelection.changeAddressType();
        pfinSelection.DelPFIN='NonBillPfin';
        pfinSelection.addRow();
        pfinSelection.DelPFIN='AffiliatedPfin';
        pfinSelection.addRow();
        pageRef.getParameters().put('setPFIN','NonBillPfin');
        pageRef.getParameters().put('selectAllCheckBox','true');
        pfinSelection.fetchAllAddress();        
        pageRef.getParameters().put('selectAllCheckBox','false');
        pfinSelection.fetchAllAddress(); 
        pfinSelection.selectChange(); 
        pfinSelection.npiChgFlg =true;       
         pfinSelection.nameChgFlg =true;
         pfinSelection.billChgFlg=true;
         pfinSelection.phyChgFlg=true;
         pfinSelection.crdChgFlg=true;
        pfinSelection.admChgFlg=true;
        pfinSelection.setEmailAccount(testAccount.Id, NULL);
        pfinSelection.fetchAddressDetails();  
        pfinSelection.resetFieldVal();        
        pfinSelection.fetchUrlAddress();
        Test.stopTest();
    }
    static testMethod void coverDynamicRequestPage()
    {
        DataUtility.insertTestData();
        Account testAccount=[Select Id From Account Where isPersonAccount=false Limit 1];
        Test.startTest();
        PageReference pageRef = Page.PFINSelection; 
        pageRef.getParameters().put('accountId', String.valueOf(testAccount.Id));            
        System.test.setCurrentPage(pageRef);        
        ManualCaseCreationController  pfinSelection= new ManualCaseCreationController();
        List<String> listOfBillPfins = ManualCaseCreationController.populatePFIN('Bil',testAccount.Id);    
        System.assert(listOfBillPfins.size()>0,true);
        pageRef.getParameters().put('setPFIN',listOfBillPfins[0]);
        pfinSelection.billPfinSelection();        
         pfinSelection.phyChgFlg=true;
          pfinSelection.billChgFlg=true;
         pfinSelection.crdChgFlg=true;
        pfinSelection.admChgFlg=true;
        pfinSelection.changeAddressType();        
        pfinSelection.selPfin = listOfBillPfins[0];
        pfinSelection.selectChange();
        pfinSelection.isAdmin =false;
        pfinSelection .isBilling=false;
        pfinSelection.isServiceLocation=false;
        pfinSelection.caseMode = 'Add';
        pfinSelection.addProvFlg = false;
        pfinselection.addNwkChgFlg = false;
        pfinselection.specialtyFlg = false;
        
        pfinSelection.redirectPage();
        
        List<String> listOfNonBillPfins = ManualCaseCreationController.populateNonBillPFIN('No',testAccount.Id,listOfBillPfins[0]); 
        System.assert(listOfNonBillPfins.size()>0,true);
        pageRef.getParameters().put('setPFIN',listOfNonBillPfins[0]);
        pfinSelection.fetchAddressNonBillPfin();
        System.assert(pfinSelection.wrapList.size()>0,true);
        pfinSelection.billChgFlg=true;        
        pfinSelection.phyChgFlg=true;
        pfinSelection.crdChgFlg=true;
        pfinSelection.admChgFlg=true;
        pfinselection.addNwkChgFlg = false;
        pfinSelection.addProvFlg = false;
        pfinselection.specialtyFlg = false;
        pfinSelection.changeAddressType();
        pfinSelection.DelPFIN='NonBillPfin';
        pfinSelection.addRow();
        pfinSelection.selectChange();
        pfinSelection.isAdmin =false;
        pfinSelection .isBilling=false;
        pfinSelection.isServiceLocation=false;
        pfinSelection.caseMode = 'Change';
        pfinSelection.nameChgFlg = true;
        pfinSelection.addProvFlg = false;
        pfinselection.addNwkChgFlg = false;
        pfinselection.specialtyFlg = false;
        pfinselection.npiChgFlg = false;
        pfinselection.setEmailAccount(testAccount.Id,null);
        pfinSelection.redirectPage();
        //System.assert(pfinSelection.wrapList.size()>0,true);     
           
        //listOfNonBillPfins = ManualCaseCreationController.populateNonBillPFIN('Af',testAccount.Id,listOfBillPfins[0]); 
        //System.assert(listOfNonBillPfins.size()>0,true);
        pageRef.getParameters().put('setPFIN',listOfNonBillPfins[0]);
        pfinSelection.fetchAddressNonBillPfin();
        //System.assert(pfinSelection.wrapList.size()>0,true);    
        pfinSelection.billChgFlg=true;
        pfinSelection.changeAddressType();
        pfinSelection.DelPFIN='NonBillPfin';
        pfinSelection.addRow();
        pfinSelection.DelPFIN='AffiliatedPfin';
        pfinSelection.addRow();
        pageRef.getParameters().put('setPFIN','NonBillPfin');
        pageRef.getParameters().put('selectAllCheckBox','true');
        pfinSelection.fetchAllAddress();        
        pageRef.getParameters().put('selectAllCheckBox','false');
        pfinSelection.fetchAllAddress(); 
        pfinSelection.phyChgFlg=true;
        
        pfinSelection.billChgFlg=true; 
        pfinSelection.crdChgFlg=true;
        pfinSelection.admChgFlg=true;
        pfinselection.addNwkChgFlg = false;
        pfinselection.specialtyFlg = false;
        pfinSelection.isAdmin =false;
       pfinSelection .isBilling=false;
        pfinSelection.isServiceLocation=false;
        pfinSelection.caseMode = 'Delete';
        pfinSelection.selectChange(); 
         
        //pfinSelection.redirectPage();      
        Test.stopTest();
    }
     static testMethod void coverSave_Add()
    {
        
        DataUtility.insertTestData();
        GlobalSettings__c globalSet = new GlobalSettings__c();
        globalSet.name = 'PFFileRecieved';
        globalSet.Record_Type_Names__c = 'Master_Provider_Case_data;Provider_On_boarding;PDM;CRM';
        insert globalSet;
        Account testAccount=[Select Id From Account Where isPersonAccount=false Limit 1];
        PageReference pageRef = Page.PFINSelection; 
        pageRef.getParameters().put('accountId', String.valueOf(testAccount.Id));            
        System.test.setCurrentPage(pageRef);        
        ManualCaseCreationController  mcc= new ManualCaseCreationController();         
        Case parent = new Case();
        parent.Status ='New';
        parent.Plan_ID__c = 'IL1';
        parent.Govt_Programs__c = true;
        parent.Case_Entity__c = testAccount.id;
        insert parent;       
        List<String> org = new List<String>();
        org.add('Case');
        //org.add('Account');
        Test.startTest();

        for(String o:org){
            PageReference pgRef = Page.DynamicRequestTypePage; 
            pgRef.getParameters().put('accountId', String.valueOf(testAccount.Id));
            pgRef.getParameters().put('from', o);
            pgRef.getParameters().put('parentId', parent.Id);
            pgRef.getParameters().put('caseEntity',String.valueOf(testAccount.Id));            
            
            System.test.setCurrentPage(pgRef );
                       
            mcc.caseMode='Add';
            mcc.acctId = testAccount.Id;
            mcc.setEmailAccount('',testAccount.Id); 
            mcc.benfChgFlg = true;
            mcc.caseCheckChgFlg = true;
            mcc.claimCheckChgFlg = true;
            mcc.contractCheckFlg = true;
            mcc.credCheckChgFlg = true;
            mcc.compCheckFlg = true;
            mcc.caseInfo = parent;            
            mcc.caseInfo.Govt_Programs__c = true;           
            mcc.npiChgFlg = true;
                
                
            mcc.networkChgFlg = true;
            mcc.statusCheckFlg = true;
            mcc.eftCheckFlg = true;
            mcc.hidePFINPage =true;        
            mcc.showPersonAcct = true;
            mcc.showEntityAcct = true;
            mcc.showData = true;
            mcc.addNwkChgFlg = true;
            mcc.BillChgFlg = true;
            mcc.nameChgFlg = true;
            mcc.crdChgFlg = true;
            mcc.npiChgFlg = false;
            mcc.phyChgFlg = true;
            mcc.addNwkChgFlg = true;
            mcc.reinPrvChgFlg = true;
            mcc.specialtyFlg = true;
            mcc.admChgFlg = true;
            mcc.rmNwrkChgFlg = true;
            mcc.termPrvChgFlg = true;
            mcc.addProvFlg = true;
            mcc.providerIDsFlg = true; 
            mcc.othersFlg = true; 
            mcc.privilegesFlg = true;
            mcc.removeProvFlg = true;           
           
            mcc.reasonLvlGrp1 = '';
            mcc.reasonLvlGrp = '';
            mcc.reasonLvlGrp2 = '';
            mcc.setIntParam();
            mcc.autoRun();
            mcc.setEmailAccount(testAccount.Id, 'Case_Entity__c');
            Case cList = null;
            cList =  [Select caseNumber,SuppliedEmail From Case  Where Id = :parent.Id]; 
            mcc.caseOrigin = 'Phone';
            mcc.parentCaseId = cList.CaseNumber;
            cList.AccountId = testAccount.id;
            mcc.emailToCase = true;
            mcc.SetCaseAccVal();
           // mcc.Corporate_received_date__c=date.today();
            mcc.parentCase.MC_PFIN__c = '2432432';
            mcc.parentCase.MC_Add__c = true;           
            mcc.parentCase.MC_Change__c = true;           
            mcc.parentCase.MC_Delete__c = true;           
            mcc.parentCase.Status = 'New';
            mcc.parentCase.Priority = 'Medium';             
            mcc.parentCase.Plan_ID__c = 'IL1'; 
            mcc.parentCase.AccountId=testAccount.Id;   
            mcc.parentCase.Govt_Programs__c = true;
            mcc.parentCase.Corporate_received_date__c = Date.today();
            mcc.parentCase.Name_Submitter__c = 'name'; 
            mcc.parentCase.Title_Submitter__c = 'Dr.';  
            mcc.parentCase.Telephone_Number_Submitter__c = '0987654321';  
            mcc.parentCase.Email_Address_Submitter__c = 'test@g.com';  
            mcc.parentCase.Name_of_Provider_Group__c = 'Type2';
            mcc.parentCase.Tax_ID_Number__c = '987654321';
            mcc.parentCase.Rendering_NPI__c = '1234567890';
            mcc.parentCase.Billing_NPI_Number__c = '1234567890';  
            mcc.parentCase.Bill_NPI_Type__c = 'Type 1';  
            mcc.parentCase.Original_Creation_Date__c=System.now();  
            mcc.parentCase.Name_Change__c = mcc.nameChgFlg;
            mcc.parentCase.NPI_Tax_Id_Change__c = mcc.npiChgFlg;
            mcc.parentCase.Office_Physical_Address_Telephone_Fax_Em__c = mcc.phyChgFlg; 
            mcc.parentCase.Billing_Address_Telephone_Fax_Email_Chan__c = mcc.billChgFlg;
            mcc.parentCase.Credentialing_Address_Telephone_Fax_Emai__c = mcc.crdChgFlg;
            mcc.parentCase.Administrative_Address_Telephone_Fax_Ema__c = mcc.admChgFlg;  
            mcc.parentCase.Add_Provider_from_Group_Location__c = mcc.addProvFlg;
            
            mcc.parentCase.Group_Name__c = 'test';
            mcc.parentCase.Group_Tax_ID__c = '432423432';
            mcc.parentCase.Group_Provider_Type_Specialty__c = 'spl';
            mcc.parentCase.License_Number__c = 'test';
            mcc.parentCase.CAQH_Number__c='24324324';    
            mcc.parentCase.Other_Provider_Number__c='324324324';
            mcc.parentCase.Add_Provider_Supervising_Physician__c='Patients';
            mcc.parentCase.Networks__c='netw';
            mcc.parentCase.Add_Provider_Accepting_New_Patients__c=true;
            mcc.parentCase.Provider_s_Name__c='provider';
            mcc.parentCase.Group_NPI__c='43545435';
            mcc.parentCase.Group_PFIN__c='432432435';
            mcc.parentCase.Individual_NPI__c='57657466';
            mcc.parentCase.Add_Provider_Date_Of_Birth__c = Date.Today();           
            mcc.parentCase.Indivudual_Type_Speciality__c = 'Indiv';
            mcc.parentCase.Comp_Grid_Code_If_applicable__c='Grid Code';
            mcc.parentCase.Designation_Code_If_applicable__c='Designation_Code';
            mcc.parentCase.Supervising_Physician_License__c='Physician_License__c';
            mcc.parentCase.Add_Nwk_Eff_Date__c=Date.Today();
            mcc.parentCase.Hospital_Affilitation__c='Hos Aff';
            
            mcc.parentCase.Site_Acce__c=true;
            mcc.parentCase.Office_Reception_Area__c=true;
            mcc.parentCase.Exam_Room__c=true;
            mcc.parentCase.Exterior__c=true;
            mcc.parentCase.Scale__c=true;
            mcc.parentCase.Interior_Building__c=true;
            mcc.parentCase.Parking_Accessbility__c=true;
            mcc.parentCase.Restroom__c=true;
            mcc.parentCase.Exam_Table__c=true;
            mcc.parentCase.Close_Proximity_to_Public_Transportation__c=true;
            
            mcc.parentCase.Current_Addr_Line_1_add_prov_Phy__c='';
            mcc.parentCase.Current_Addr_Line_2_add_prov_Phy__c='';
            mcc.parentCase.Current_City_add_prov_Phy__c='';
            mcc.parentCase.Current_State_add_prov_Phy__c='';
            mcc.parentCase.Current_Zip_add_prov_Phy__c='';
            mcc.parentCase.Current_Phone_add_prov_Phy__c='';
            mcc.parentCase.Current_Email_add_prov_Phy__c='';
            mcc.parentCase.Current_Fax_add_prov_Phy__c='';
            mcc.parentCase.Accepting_New_Patients_add_prov_Phy__c=true;
            mcc.parentCase.New_Addr_Line_1_add_prov_Phy__c='';
            mcc.parentCase.New_Addr_Line_2_add_prov_Phy__c='';
            mcc.parentCase.New_City_add_prov_Phy__c='';
            mcc.parentCase.New_State_add_prov_Phy__c='';
            mcc.parentCase.New_Zip_add_prov_Phy__c='';
            mcc.parentCase.New_Phone_add_prov_Phy__c='';
            mcc.parentCase.New_Email_add_prov_Phy__c='';
            mcc.parentCase.New_Fax_add_prov_Phy__c='';
            mcc.parentCase.Primary_Location_add_prov_Phy__c='';
            mcc.parentCase.Efft_Date_Physical_add_prov_Phy__c=Date.Today();
            
            mcc.parentCase.Current_Addr_Line_1_add_prov_Bill__c='test address';
            mcc.parentCase.Current_Addr_Line_2_add_prov_Bill__c='test address 2';
            mcc.parentCase.Current_City_add_prov_Bill__c='Houston';
            mcc.parentCase.Current_State_add_prov_Bill__c='Texas';
            mcc.parentCase.Current_Zip_add_prov_Bill__c='7016';
            mcc.parentCase.Current_Phone_add_prov_Bill__c='0987654321';
            mcc.parentCase.Current_Email_add_prov_Bill__c='test@hcsc.net';
            mcc.parentCase.Current_Fax_add_prov_Bill__c='';
            mcc.parentCase.New_Addr_Line_1_add_prov_Bill__c='';
            mcc.parentCase.New_Addr_Line_2_add_prov_Bill__c='';
            mcc.parentCase.New_City_add_prov_Bill__c='Dallas';
            mcc.parentCase.New_State_add_prov_Bill__c='TX';
            mcc.parentCase.New_Zip_add_prov_Bill__c='70123';
            mcc.parentCase.New_Phone_add_prov_Bill__c='2432423';
            mcc.parentCase.New_Email_add_prov_Bill__c='test@r.com';
            mcc.parentCase.New_Fax_add_prov_Bill__c='4334324324';
            mcc.parentCase.Efft_Date_add_prov_Bill__c=Date.Today();
            mcc.parentCase.Comments_add_prov_Bill__c='test';
            set <string> pfins =new set <string>();
            pfins.add('BillPfin');
            mcc.npiChange(pfins);
            mcc.validateEmail('test@hcsc.net');
            mcc.ValidatePhone('0987654321');    
            mcc.selPFIN='0MT0208822';
            mcc.CaseInfo.Corporate_received_date__c = date.today();
            mcc.selectChange();
            AvoidRecursion.runAfter = true;           
            mcc.saveinfo(); 
            mcc.resetFieldVal();
                       
        }
          Test.stopTest(); 
     
    }
    
    static testMethod void coverSave_Change()
    {
        DataUtility.insertTestData();
        GlobalSettings__c globalSet = new GlobalSettings__c();
        globalSet.name = 'PFFileRecieved';
        globalSet.Record_Type_Names__c = 'Master_Provider_Case_data;Provider_On_boarding;PDM;CRM';
        insert globalSet;
        Account testAccount=[Select Id From Account Where isPersonAccount=true Limit 1];
        Test.startTest();      
         PageReference pageRef = Page.PFINSelection; 
        pageRef.getParameters().put('accountId', String.valueOf(testAccount.Id));            
        System.test.setCurrentPage(pageRef);        
        ManualCaseCreationController  mcc= new ManualCaseCreationController(); 
        Case parent = new Case();
        parent.Status ='New';
        parent.Plan_ID__c = 'IL1';
        parent.Corporate_received_date__c = Date.today();
        insert parent;  
        List<String> org = new List<String>();
        org.add('Case');
        org.add('Account');
        for(String o:org){
            PageReference pgRef = Page.DynamicRequestTypePage; 
            pgRef.getParameters().put('accountId', String.valueOf(testAccount.Id));
            pgRef.getParameters().put('from', o);
            pgRef.getParameters().put('parentId', parent.Id);
            pgRef.getParameters().put('caseEntity',String.valueOf(testAccount.Id));            
            
            System.test.setCurrentPage(pgRef );            
           
            mcc.caseMode='Change';
            mcc.networkChg.MC_Change__c = true;
            mcc.acctId = testAccount.Id;
            mcc.provName = testAccount;
            mcc.setEmailAccount('',testAccount.Id); 
            mcc.benfChgFlg = true;
            mcc.caseCheckChgFlg = true;
            mcc.claimCheckChgFlg = true;
            mcc.contractCheckFlg = true;
            mcc.credCheckChgFlg = true;
            mcc.compCheckFlg = true;
            
            
            
            mcc.hidePFINPage=true;        
            mcc.showPersonAcct = true;
            mcc.showEntityAcct = true;
            mcc.showData = true;
            mcc.addNwkChgFlg = true;
            mcc.BillChgFlg = true;
            mcc.nameChgFlg = true;
            mcc.crdChgFlg = true;
            mcc.npiChgFlg = true;
            mcc.phyChgFlg = true;
            mcc.addNwkChgFlg = true;
            mcc.reinPrvChgFlg = true;
            mcc.specialtyFlg = true;
            mcc.admChgFlg = true;
            mcc.rmNwrkChgFlg = true;
            mcc.termPrvChgFlg = true;
            mcc.addProvFlg = true;
            mcc.providerIDsFlg = true; 
            mcc.othersFlg = true; 
            mcc.privilegesFlg = true;
            mcc.removeProvFlg = true;           
          
            mcc.reasonLvlGrp1 = '';
            mcc.reasonLvlGrp = '';
            mcc.reasonLvlGrp2 = '';
            mcc.setIntParam();
            mcc.autoRun();
            mcc.setEmailAccount(testAccount.Id, 'Case_Entity__c');
            Case cList = null;
            cList =  [Select caseNumber,SuppliedEmail From Case  Where Id = :parent.Id]; 
            mcc.caseOrigin = 'Phone';
            mcc.parentCaseId = cList.CaseNumber;
            mcc.emailToCase = true;
            mcc.SetCaseAccVal();
            mcc.parentCase.MC_PFIN__c = '2432432';
            mcc.parentCase.MC_Add__c = true;           
            mcc.parentCase.MC_Change__c = true;           
            mcc.parentCase.MC_Delete__c = true;           
            mcc.parentCase.Status = 'New';
            mcc.parentCase.Priority = 'Medium';             
            mcc.parentCase.Plan_ID__c = 'IL1'; 
            mcc.parentCase.AccountId=testAccount.Id;   
            mcc.parentCase.Govt_Programs__c = true;
            mcc.parentCase.Corporate_received_date__c = Date.today();
            mcc.parentCase.Name_Submitter__c = 'name'; 
            mcc.parentCase.Title_Submitter__c = 'Dr.';  
            mcc.parentCase.Telephone_Number_Submitter__c = '0987654321';  
            mcc.parentCase.Email_Address_Submitter__c = 'test@g.com';  
            mcc.parentCase.Name_of_Provider_Group__c = 'Type2';
            mcc.parentCase.Tax_ID_Number__c = '987654321';
            mcc.parentCase.Rendering_NPI__c = '1234567890';
            mcc.parentCase.Billing_NPI_Number__c = '1234567890';  
            mcc.parentCase.Bill_NPI_Type__c = 'Type 1';  
            mcc.parentCase.Original_Creation_Date__c=System.now();  
            mcc.parentCase.Name_Change__c = mcc.nameChgFlg;
            mcc.parentCase.NPI_Tax_Id_Change__c = mcc.npiChgFlg;
            mcc.parentCase.Office_Physical_Address_Telephone_Fax_Em__c = mcc.phyChgFlg; 
            mcc.parentCase.Billing_Address_Telephone_Fax_Email_Chan__c = mcc.billChgFlg;
            mcc.parentCase.Credentialing_Address_Telephone_Fax_Emai__c = mcc.crdChgFlg;
            mcc.parentCase.Administrative_Address_Telephone_Fax_Ema__c = mcc.admChgFlg;  
            mcc.parentCase.Add_Provider_from_Group_Location__c = mcc.addProvFlg;
            
            mcc.parentCase.Group_Name__c = 'test';
            mcc.parentCase.Group_Tax_ID__c = '432423432';
            mcc.parentCase.Group_Provider_Type_Specialty__c = 'spl';
            mcc.parentCase.License_Number__c = 'test';
            mcc.parentCase.CAQH_Number__c='24324324';    
            mcc.parentCase.Other_Provider_Number__c='324324324';
            mcc.parentCase.Add_Provider_Supervising_Physician__c='Patients';
            mcc.parentCase.Networks__c='netw';
            mcc.parentCase.Add_Provider_Accepting_New_Patients__c=true;
            mcc.parentCase.Provider_s_Name__c='provider';
            mcc.parentCase.Group_NPI__c='43545435';
            mcc.parentCase.Group_PFIN__c='432432435';
            mcc.parentCase.Individual_NPI__c='57657466';
            mcc.parentCase.Add_Provider_Date_Of_Birth__c = Date.Today();           
            mcc.parentCase.Indivudual_Type_Speciality__c = 'Indiv';
            mcc.parentCase.Comp_Grid_Code_If_applicable__c='Grid Code';
            mcc.parentCase.Designation_Code_If_applicable__c='Designation_Code';
            mcc.parentCase.Supervising_Physician_License__c='Physician_License__c';
            mcc.parentCase.Add_Nwk_Eff_Date__c=Date.Today();
            mcc.parentCase.Hospital_Affilitation__c='Hos Aff';
            
            mcc.parentCase.Site_Acce__c=true;
            mcc.parentCase.Office_Reception_Area__c=true;
            mcc.parentCase.Exam_Room__c=true;
            mcc.parentCase.Exterior__c=true;
            mcc.parentCase.Scale__c=true;
            mcc.parentCase.Interior_Building__c=true;
            mcc.parentCase.Parking_Accessbility__c=true;
            mcc.parentCase.Restroom__c=true;
            mcc.parentCase.Exam_Table__c=true;
            mcc.parentCase.Close_Proximity_to_Public_Transportation__c=true;
            
            mcc.parentCase.Current_Addr_Line_1_add_prov_Phy__c='';
            mcc.parentCase.Current_Addr_Line_2_add_prov_Phy__c='';
            mcc.parentCase.Current_City_add_prov_Phy__c='';
            mcc.parentCase.Current_State_add_prov_Phy__c='';
            mcc.parentCase.Current_Zip_add_prov_Phy__c='';
            mcc.parentCase.Current_Phone_add_prov_Phy__c='';
            mcc.parentCase.Current_Email_add_prov_Phy__c='';
            mcc.parentCase.Current_Fax_add_prov_Phy__c='';
            mcc.parentCase.Accepting_New_Patients_add_prov_Phy__c=true;
            mcc.parentCase.New_Addr_Line_1_add_prov_Phy__c='';
            mcc.parentCase.New_Addr_Line_2_add_prov_Phy__c='';
            mcc.parentCase.New_City_add_prov_Phy__c='';
            mcc.parentCase.New_State_add_prov_Phy__c='';
            mcc.parentCase.New_Zip_add_prov_Phy__c='';
            mcc.parentCase.New_Phone_add_prov_Phy__c='';
            mcc.parentCase.New_Email_add_prov_Phy__c='';
            mcc.parentCase.New_Fax_add_prov_Phy__c='';
            mcc.parentCase.Primary_Location_add_prov_Phy__c='';
            mcc.parentCase.Efft_Date_Physical_add_prov_Phy__c=Date.Today();
            
            mcc.parentCase.Current_Addr_Line_1_add_prov_Bill__c='test address';
            mcc.parentCase.Current_Addr_Line_2_add_prov_Bill__c='test address 2';
            mcc.parentCase.Current_City_add_prov_Bill__c='Houston';
            mcc.parentCase.Current_State_add_prov_Bill__c='Texas';
            mcc.parentCase.Current_Zip_add_prov_Bill__c='7016';
            mcc.parentCase.Current_Phone_add_prov_Bill__c='0987654321';
            mcc.parentCase.Current_Email_add_prov_Bill__c='test@hcsc.net';
            mcc.parentCase.Current_Fax_add_prov_Bill__c='';
            mcc.parentCase.New_Addr_Line_1_add_prov_Bill__c='';
            mcc.parentCase.New_Addr_Line_2_add_prov_Bill__c='';
            mcc.parentCase.New_City_add_prov_Bill__c='Dallas';
            mcc.parentCase.New_State_add_prov_Bill__c='TX';
            mcc.parentCase.New_Zip_add_prov_Bill__c='70123';
            mcc.parentCase.New_Phone_add_prov_Bill__c='2432423';
            mcc.parentCase.New_Email_add_prov_Bill__c='test@r.com';
            mcc.parentCase.New_Fax_add_prov_Bill__c='4334324324';
            mcc.parentCase.Efft_Date_add_prov_Bill__c=Date.Today();
            mcc.parentCase.Comments_add_prov_Bill__c='test';
            
            set <string> pfins =new set <string>();
            pfins.add('BillPfin');
            mcc.npiChange(pfins);
            mcc.validateEmail('test@hcsc.net');
            mcc.ValidatePhone('0987654321');    
            mcc.selPFIN='0MT0208822';
            mcc.CaseInfo.Corporate_received_date__c = date.today();
            mcc.provName = testAccount;
            mcc.selectChange();
            AvoidRecursion.runAfter = true;        
            mcc.saveinfo();
            mcc.resetFieldVal();
            mcc.setGovtCaseInd();
            CM_Remove_Network_Reasons__c tcmremoveNet = new CM_Remove_Network_Reasons__c();
            tcmremoveNet.inactive_reason_description__c = 'testing';
            tcmremoveNet.Plan_Id__c = 'IL1';
            insert tcmremoveNet;
            mcc.allRemoveNetworkReasons('IL1');            
            //mcc.Validate();
           
        }
        Test.stopTest();
    }
    
     static testMethod void coverSave_Delete()
    {
        DataUtility.insertTestData();
        GlobalSettings__c globalSet = new GlobalSettings__c();
        globalSet.name = 'PFFileRecieved';
        globalSet.Record_Type_Names__c = 'Master_Provider_Case_data;Provider_On_boarding;PDM;CRM';
        insert globalSet;
        Account testAccount=[Select Id From Account Where isPersonAccount=false Limit 1];
        Test.startTest();      
        PageReference pageRef = Page.PFINSelection; 
        pageRef.getParameters().put('accountId', String.valueOf(testAccount.Id));            
        System.test.setCurrentPage(pageRef);
        ManualCaseCreationController  mcc= new ManualCaseCreationController();      
        Case parent = new Case();
        parent.Status ='New';
        parent.Plan_ID__c = 'IL1';
        parent.Corporate_received_date__c = Date.today();
        insert parent; 
        ManualCaseCreationController.WrapperClassDisplay testwrap = new ManualCaseCreationController.WrapperClassDisplay();
        testwrap.newCase = parent;
        testwrap.isFirstPfin = false;
        testwrap.pfinNumber = '12365';
        testwrap.selectedOption = '123';
        List<String> org = new List<String>();
        org.add('Case');
        org.add('Account');
        for(String o:org){
            PageReference pgRef = Page.DynamicRequestTypePage; 
            pgRef.getParameters().put('accountId', String.valueOf(testAccount.Id));
            pgRef.getParameters().put('from', o);
            pgRef.getParameters().put('parentId', parent.Id);
            pgRef.getParameters().put('caseEntity',String.valueOf(testAccount.Id));            
            
            System.test.setCurrentPage(pgRef );            
           
            mcc.caseMode='Delete';
            mcc.acctId = testAccount.Id;
            mcc.setEmailAccount('',testAccount.Id);  
            mcc.hidePFINPage=true;        
            mcc.showPersonAcct = true;
            mcc.showEntityAcct = true;
            mcc.showData = true;
            mcc.addNwkChgFlg = true;
            mcc.BillChgFlg = true;
            mcc.nameChgFlg = true;
            mcc.crdChgFlg = true;
            mcc.npiChgFlg = true;
            mcc.phyChgFlg = true;
            mcc.addNwkChgFlg = true;
            mcc.reinPrvChgFlg = true;
            mcc.specialtyFlg = true;
            mcc.admChgFlg = true;
            mcc.rmNwrkChgFlg = true;
            mcc.termPrvChgFlg = true;
            mcc.addProvFlg = true;
            mcc.providerIDsFlg = true; 
            mcc.othersFlg = true; 
            mcc.privilegesFlg = true;
            mcc.removeProvFlg = true;           
          
            mcc.reasonLvlGrp1 = '';
            mcc.reasonLvlGrp = '';
            mcc.reasonLvlGrp2 = '';
            mcc.setIntParam();
            mcc.autoRun();
            mcc.setEmailAccount(testAccount.Id, 'Case_Entity__c');
            Case cList = null;
            cList =  [Select caseNumber,SuppliedEmail From Case  Where Id = :parent.Id]; 
            mcc.caseOrigin = 'Phone';
            mcc.parentCaseId = cList.CaseNumber;
            mcc.emailToCase = true;
            mcc.SetCaseAccVal();
            mcc.parentCase.MC_PFIN__c = '2432432';
            mcc.parentCase.MC_Add__c = true;           
            mcc.parentCase.MC_Change__c = true;           
            mcc.parentCase.MC_Delete__c = true;           
            mcc.parentCase.Status = 'New';
            mcc.parentCase.Priority = 'Medium';             
            mcc.parentCase.Plan_ID__c = 'IL1'; 
            mcc.parentCase.AccountId=testAccount.Id;   
            mcc.parentCase.Govt_Programs__c = true;
            mcc.parentCase.Corporate_received_date__c = Date.today();
            mcc.parentCase.Name_Submitter__c = 'name'; 
            mcc.parentCase.Title_Submitter__c = 'Dr.';  
            mcc.parentCase.Telephone_Number_Submitter__c = '0987654321';  
            mcc.parentCase.Email_Address_Submitter__c = 'test@g.com';  
            mcc.parentCase.Name_of_Provider_Group__c = 'Type2';
            mcc.parentCase.Tax_ID_Number__c = '987654321';
            mcc.parentCase.Rendering_NPI__c = '1234567890';
            mcc.parentCase.Billing_NPI_Number__c = '1234567890';  
            mcc.parentCase.Bill_NPI_Type__c = 'Type 1';  
            mcc.parentCase.Original_Creation_Date__c=System.now();  
            mcc.parentCase.Name_Change__c = mcc.nameChgFlg;
            mcc.parentCase.NPI_Tax_Id_Change__c = mcc.npiChgFlg;
            mcc.parentCase.Office_Physical_Address_Telephone_Fax_Em__c = mcc.phyChgFlg; 
            mcc.parentCase.Billing_Address_Telephone_Fax_Email_Chan__c = mcc.billChgFlg;
            mcc.parentCase.Credentialing_Address_Telephone_Fax_Emai__c = mcc.crdChgFlg;
            mcc.parentCase.Administrative_Address_Telephone_Fax_Ema__c = mcc.admChgFlg;  
            mcc.parentCase.Add_Provider_from_Group_Location__c = mcc.addProvFlg;
            
            mcc.parentCase.Group_Name__c = 'test';
            mcc.parentCase.Group_Tax_ID__c = '432423432';
            mcc.parentCase.Group_Provider_Type_Specialty__c = 'spl';
            mcc.parentCase.License_Number__c = 'test';
            mcc.parentCase.CAQH_Number__c='24324324';    
            mcc.parentCase.Other_Provider_Number__c='324324324';
            mcc.parentCase.Add_Provider_Supervising_Physician__c='Patients';
            mcc.parentCase.Networks__c='netw';
            mcc.parentCase.Add_Provider_Accepting_New_Patients__c=true;
            mcc.parentCase.Provider_s_Name__c='provider';
            mcc.parentCase.Group_NPI__c='43545435';
            mcc.parentCase.Group_PFIN__c='432432435';
            mcc.parentCase.Individual_NPI__c='57657466';
            mcc.parentCase.Add_Provider_Date_Of_Birth__c = Date.Today();           
            mcc.parentCase.Indivudual_Type_Speciality__c = 'Indiv';
            mcc.parentCase.Comp_Grid_Code_If_applicable__c='Grid Code';
            mcc.parentCase.Designation_Code_If_applicable__c='Designation_Code';
            mcc.parentCase.Supervising_Physician_License__c='Physician_License__c';
            mcc.parentCase.Add_Nwk_Eff_Date__c=Date.Today();
            mcc.parentCase.Hospital_Affilitation__c='Hos Aff';
            
            mcc.parentCase.Site_Acce__c=true;
            mcc.parentCase.Office_Reception_Area__c=true;
            mcc.parentCase.Exam_Room__c=true;
            mcc.parentCase.Exterior__c=true;
            mcc.parentCase.Scale__c=true;
            mcc.parentCase.Interior_Building__c=true;
            mcc.parentCase.Parking_Accessbility__c=true;
            mcc.parentCase.Restroom__c=true;
            mcc.parentCase.Exam_Table__c=true;
            mcc.parentCase.Close_Proximity_to_Public_Transportation__c=true;
            
            mcc.parentCase.Current_Addr_Line_1_add_prov_Phy__c='';
            mcc.parentCase.Current_Addr_Line_2_add_prov_Phy__c='';
            mcc.parentCase.Current_City_add_prov_Phy__c='';
            mcc.parentCase.Current_State_add_prov_Phy__c='';
            mcc.parentCase.Current_Zip_add_prov_Phy__c='';
            mcc.parentCase.Current_Phone_add_prov_Phy__c='';
            mcc.parentCase.Current_Email_add_prov_Phy__c='';
            mcc.parentCase.Current_Fax_add_prov_Phy__c='';
            mcc.parentCase.Accepting_New_Patients_add_prov_Phy__c=true;
            mcc.parentCase.New_Addr_Line_1_add_prov_Phy__c='';
            mcc.parentCase.New_Addr_Line_2_add_prov_Phy__c='';
            mcc.parentCase.New_City_add_prov_Phy__c='';
            mcc.parentCase.New_State_add_prov_Phy__c='';
            mcc.parentCase.New_Zip_add_prov_Phy__c='';
            mcc.parentCase.New_Phone_add_prov_Phy__c='';
            mcc.parentCase.New_Email_add_prov_Phy__c='';
            mcc.parentCase.New_Fax_add_prov_Phy__c='';
            mcc.parentCase.Primary_Location_add_prov_Phy__c='';
            mcc.parentCase.Efft_Date_Physical_add_prov_Phy__c=Date.Today();
            
            mcc.parentCase.Current_Addr_Line_1_add_prov_Bill__c='test address';
            mcc.parentCase.Current_Addr_Line_2_add_prov_Bill__c='test address 2';
            mcc.parentCase.Current_City_add_prov_Bill__c='Houston';
            mcc.parentCase.Current_State_add_prov_Bill__c='Texas';
            mcc.parentCase.Current_Zip_add_prov_Bill__c='7016';
            mcc.parentCase.Current_Phone_add_prov_Bill__c='0987654321';
            mcc.parentCase.Current_Email_add_prov_Bill__c='test@hcsc.net';
            mcc.parentCase.Current_Fax_add_prov_Bill__c='';
            mcc.parentCase.New_Addr_Line_1_add_prov_Bill__c='';
            mcc.parentCase.New_Addr_Line_2_add_prov_Bill__c='';
            mcc.parentCase.New_City_add_prov_Bill__c='Dallas';
            mcc.parentCase.New_State_add_prov_Bill__c='TX';
            mcc.parentCase.New_Zip_add_prov_Bill__c='70123';
            mcc.parentCase.New_Phone_add_prov_Bill__c='2432423';
            mcc.parentCase.New_Email_add_prov_Bill__c='test@r.com';
            mcc.parentCase.New_Fax_add_prov_Bill__c='4334324324';
            mcc.parentCase.Efft_Date_add_prov_Bill__c=Date.Today();
            mcc.parentCase.Comments_add_prov_Bill__c='test';
            
            set <string> pfins =new set <string>();
            pfins.add('BillPfin');
            mcc.npiChange(pfins);
            mcc.validateEmail('test@hcsc.net');
            mcc.ValidatePhone('0987654321');    
            mcc.selPFIN='0MT0208822';
            mcc.CaseInfo.Corporate_received_date__c = null;
            mcc.caseInfo.Telephone_Number_Submitter__c = '1236541236544';
            mcc.caseInfo.Email_Address_Submitter__c = 'ashdg';
            mcc.npiChg.New_Tax_ID_Number__c = '1236547890asd';
            mcc.npiChg.New_Billing_NPI_Number__c ='asd34123123';
            mcc.npiChg.Group_Tax_ID__c = 'ahsgd';
            mcc.phyChgFlg = true;
            mcc.phyAddrChg.Telephone_Physical_New__c = '1236541236544';
            mcc.phyAddrChg.Fax_Physical_New__c ='1236541236544';
            mcc.phyAddrChg.Group_Tax_ID__c = 'ashdgqwe';
            mcc.billAddrChg.Telephone_Billing_New__c = '1236541236544';
            mcc.billAddrChg.Fax_Billing_New__c = '1236541236544';
            mcc.billAddrChg.Group_Tax_ID__c = 'testingg';
            mcc.admAddrChg.Telephone_Administrative_New__c ='0123654789654';
            mcc.admAddrChg.Fax_Administrative_New__c ='0123654789654';
            mcc.admAddrChg.Group_Tax_ID__c ='sdfsdfsdf';
            mcc.removeProv.Individual_s_Type_1_NPI__c = 'jhfjhfh';
            mcc.addProv.New_Phone_add_prov_Phy__c = '1236547890123';
            mcc.addProv.New_Fax_add_prov_Phy__c = '0123654789654';
            mcc.addProv.New_Phone_add_prov_Bill__c = '01236547895123';
            mcc.addProv.New_Fax_add_prov_Bill__c = '21365478945612';
            mcc.addProv.Group_Tax_ID__c = 'tyrytr';
            mcc.addProv.Medicaid_Number__c = '12364598745612365478920';
            mcc.addProv.Medicare_Number__c = '1236547890lkjhg';
            mcc.addProv.Group_PFIN__c = '1236547890lkjhg';
            mcc.addProv.Middle_Initial_New__c = '123';
            mcc.addProv.Individual_NPI__c = 'asgdjha';
            mcc.addProv.Group_NPI__c = 'ahsgdwe';
            mcc.addProv.License_Number__c = '12365487895242';
            mcc.addProv.License_OP_Current__c = '012365478956';
            mcc.addProv.License_OP_New__c = '01236547896';
            mcc.addProv.Supervising_Physician_License__c = '012365478954456456';
            mcc.otherProv.License_Number__c = '012365478965';
            mcc.otherProv.License_OP_Current__c = '012365478965';
            mcc.otherProv.License_OP_New__c = '210321456987456';
            mcc.otherProv.Supervising_Physician_License__c = '012365478965';
            mcc.otherProv.Medicaid_Number__c = '012365478945632145698745';
            mcc.otherProv.Medicare_Number__c = '10236547895641';
            mcc.otherProv.Group_PFIN__c = '0124563987456';
            mcc.otherProv.Middle_Initial_New__c = '125';
            mcc.admChgFlg = true;
            mcc.networkChg.MC_Delete__c = true;
            mcc.selectChange();
            AvoidRecursion.runAfter = true;
            mcc.saveinfo(); 
            mcc.Validate();
           
            mcc.resetFieldVal();
        }
        Test.stopTest();
    }

    Static TestMethod void covermanualCaseCreationControllerSupportCls(){
     GlobalSettings__c gs  =  new GlobalSettings__c();
        gs.name         =  'PFFileRecieved';
        gs.PFFileRecieved__c  =  false;
        gs.Record_Type_Names__c  =  'Master_Provider_Case_data;Provider_On_boarding;PDM;CRM';
        insert gs;
        Test.startTest(); 
        Provider_Networks__c provNetwork            =   new Provider_Networks__c();
        case c = new case();         
        c.Bill_NPI_Type__c      ='Type 2 (Group)';
        c.status    ='Closed Rejected';
        c.PFIN_Numbers_Long__c  ='1236547896';
        c.Bill_PFIN__c  = '2145639874';
        c.CRM_Types__c='Test';
        insert c;
        provNetwork.Case_Number__c      = c.Id; 
       
            
        provNetwork.Comment__c                      =   'test'; 
        provNetwork.Network_Name__c                 =   'PMC -Medicare Advantage Network';
        provNetwork.Panel_code__c                   =   'Closed';
        provNetwork.Roles_Code__c                   =   'PCP';
        provNetwork.Plan_Id__c                      =   'IL1';
        provNetwork.Comp_Grid_Code__c               =   '123';
        Insert provNetwork;
        Test.stopTest();
    }
    
}